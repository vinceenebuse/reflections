How did viewing a diff between two versions of a file help you see the bug that
 was introduced?

    

	It presented the exact lines that had the diffrences for further scrunity.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	It would help me notice my improvements with each version of the file.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?

	Pro: You are sure of purpose of each commit and it makes logical sense.
	Con: If you forget to commit, you can lose data or make the file too large to produce a meaningful diff.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

	VCS like Git were built for code and built with the consciousness that most applications require several 
	different files.

How can you use the commands git log and git diff to view the history of files?

	You use git log to view the commit history of a repository while you use git diff to view the difference between
	2 git commits.

How might using version control make you more confident to make changes that could break something?

	Super confident knowing that I can recover the last working commit.

Now that you have your workspace set up, what do you want to try using Git for?

	Source code version control.